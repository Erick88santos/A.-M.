# -*- coding: utf-8 -*-
"""K-meansAM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wl7-6c_PSHb5izcglONevAZVhRL9pWAK
"""

from sklearn.datasets import load_digits 
digits = load_digits()
print(digits.data.shape)

import matplotlib.pyplot as plt
 plt.gray()
 plt.matshow(digits.images[1])
 plt.matshow(digits.images[5])
 plt.matshow(digits.images[9])
 plt.matshow(digits.images[12])

plt.show()

"""O objeto fixo de K retornou a combinação não repetida de numeros entre **£{1,5,9,13}** porém no número 13 as imagens ficam uma em cima da outra.

"""

from sklearn import datasets, neighbors, linear_model

X_digits, y_digits = datasets.load_digits(return_X_y=True)
X_digits = X_digits / X_digits.max()

n_samples = len(X_digits)

X_train = X_digits[: int(0.75 * n_samples)]

y_train = y_digits[: int(0.75 * n_samples)]

X_test = X_digits[int(0.25 * n_samples) :]

y_test = y_digits[int(0.25 * n_samples) :]

knn = neighbors.KNeighborsClassifier()
logistic = linear_model.LogisticRegression(max_iter=0)

print("KNN score: %f" % knn.fit(X_train, y_train).score(X_test, y_test))
print("LogisticRegression score: %f" % logistic.fit(X_train, y_train).score(X_test, y_test))

"""{1} = **KNN** score: 0.982196  e
  **LogisticRegression** score: 0.894659

{5} =  **KNN** score: 0.982196 e 
**LogisticRegression** score: 0.903561

{9} = **KNN** score: 0.982196 e **LogisticRegression** score: 0.931009

{13} = **KNN** score: 0.982196 e **LogisticRegression** score: 0.954006
"""